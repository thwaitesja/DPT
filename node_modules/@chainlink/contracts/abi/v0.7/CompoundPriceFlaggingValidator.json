{
	"schemaVersion": "2.0.0",
	"contractName": "CompoundPriceFlaggingValidator",
	"compilerOutput": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "flagsAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "compoundOracleAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "CompoundOpenOracleAddressUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "aggregator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "decimals",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "deviationThresholdNumerator",
						"type": "uint32"
					}
				],
				"name": "FeedDetailsSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "FlagsAddressUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "OwnershipTransferRequested",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "acceptOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "aggregators",
						"type": "address[]"
					}
				],
				"name": "check",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "checkUpkeep",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "compoundOpenOracle",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "flags",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "aggregator",
						"type": "address"
					}
				],
				"name": "getFeedDetails",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					},
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "performUpkeep",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "oracleAddress",
						"type": "address"
					}
				],
				"name": "setCompoundOpenOracleAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "aggregator",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "compoundSymbol",
						"type": "string"
					},
					{
						"internalType": "uint8",
						"name": "compoundDecimals",
						"type": "uint8"
					},
					{
						"internalType": "uint32",
						"name": "compoundDeviationThresholdNumerator",
						"type": "uint32"
					}
				],
				"name": "setFeedDetails",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "flagsAddress",
						"type": "address"
					}
				],
				"name": "setFlagsAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "aggregators",
						"type": "address[]"
					}
				],
				"name": "update",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"check(address[])": {
					"details": "If any of the aggregators provided have an equivalent Compound Oracle feed that with a price outside of the configured deviation, this function will return them.",
					"params": {
						"aggregators": "address[] memory"
					},
					"returns": {
						"_0": "address[] invalid feeds"
					}
				},
				"checkUpkeep(bytes)": {
					"details": "If any of the aggregators provided have an equivalent Compound Oracle feed that with a price outside of the configured deviation, this function will return them.",
					"params": {
						"data": "bytes encoded address array"
					},
					"returns": {
						"_0": "needsUpkeep bool indicating whether upkeep needs to be performed",
						"_1": "invalid aggregators - bytes encoded address array of invalid aggregator addresses"
					}
				},
				"compoundOpenOracle()": {
					"returns": {
						"_0": "address"
					}
				},
				"constructor": {
					"details": "Use this contract to compare Chainlink aggregator prices against the Compound Open Oracle prices",
					"params": {
						"compoundOracleAddress": "Address of the Compound Open Oracle UniswapAnchoredView contract",
						"flagsAddress": "Address of the flag contract"
					}
				},
				"flags()": {
					"returns": {
						"_0": "address"
					}
				},
				"getFeedDetails(address)": {
					"params": {
						"aggregator": "address"
					},
					"returns": {
						"_0": "string Compound Oracle Symbol",
						"_1": "uint8 Compound Oracle Decimals",
						"_2": "uint32 Deviation Threshold Numerator"
					}
				},
				"performUpkeep(bytes)": {
					"details": "This contract must have write permissions on the Flags contract",
					"params": {
						"data": "bytes encoded address array"
					}
				},
				"setCompoundOpenOracleAddress(address)": {
					"params": {
						"oracleAddress": "Compound Open Oracle UniswapAnchoredView address"
					}
				},
				"setFeedDetails(address,string,uint8,uint32)": {
					"params": {
						"aggregator": "The Chainlink aggregator address",
						"compoundDecimals": "The number of decimals in the Compound feed",
						"compoundDeviationThresholdNumerator": "The threshold numerator use to determine the percentage with which the difference in prices must reside within. Parts per billion.   For example:     If prices are valid within a 5% threshold, assuming x is the compoundDeviationThresholdNumerator:     x / 1,000,000,000 = 0.05     x = 50,000,000",
						"compoundSymbol": "The symbol used by Compound for this feed"
					}
				},
				"setFlagsAddress(address)": {
					"params": {
						"flagsAddress": "sets the address of the flags contract"
					}
				},
				"update(address[])": {
					"details": "This contract must have write permissions on the Flags contract",
					"params": {
						"aggregators": "address[] memory"
					},
					"returns": {
						"_0": "address[] memory invalid aggregators"
					}
				}
			},
			"version": 1
		},
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1D3E CODESIZE SUB DUP1 PUSH3 0x1D3E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH3 0x5D DUP3 PUSH3 0x70 JUMP JUMPDEST PUSH3 0x68 DUP2 PUSH3 0x13A JUMP JUMPDEST POP POP PUSH3 0x203 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0xD0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND DUP2 EQ PUSH3 0x136 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP4 AND SWAP1 PUSH32 0x900AA01828592AB069E4D44E7A36C70EBD476E35F567C7DB6A691E503B8029D8 SWAP1 PUSH1 0x0 SWAP1 LOG3 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x19A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND DUP2 EQ PUSH3 0x136 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP4 AND SWAP1 PUSH32 0xD37715469C4865E142B38D226FD2732C830E5ACB6338E1B3007A8A0B689F7667 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1B2B DUP1 PUSH3 0x213 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xF0BA3AE1 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0xF1987695 EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5EA JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x8417CA99 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x870E5D51 EQ PUSH2 0x44A JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x64CC4AA5 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x64CC4AA5 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x725AFD44 EQ PUSH2 0x39E JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x25C620B9 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x317F17DC EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x20C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x61D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x73E SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E0 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x81C JUMP JUMPDEST PUSH2 0x284 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x362 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x34A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x38F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x117 PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x9FC JUMP JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xFE4 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x284 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x528 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x57A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x562 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5A7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x6A3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND DUP2 EQ PUSH2 0x73A JUMPI PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP4 AND SWAP1 PUSH32 0xD37715469C4865E142B38D226FD2732C830E5ACB6338E1B3007A8A0B689F7667 SWAP1 PUSH1 0x0 SWAP1 LOG3 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x74A DUP4 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0x760BC82D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP5 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP5 MLOAD SWAP5 SWAP6 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND SWAP4 PUSH4 0x760BC82D SWAP4 DUP7 SWAP4 SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP3 ADD SWAP2 DUP2 DUP7 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7BE JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x80F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82F DUP3 DUP3 PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0x868 DUP6 DUP6 PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 MLOAD GT SWAP1 POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8B7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x89F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x980 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xA82 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0xAA2 JUMPI POP PUSH4 0x3B9ACA00 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO JUMPDEST PUSH2 0xB0D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207468726573686F6C64206E756D657261746F720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xB4C DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1498 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBB7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420436F6D706F756E6420707269636500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP5 SWAP1 DIV DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC81 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC56 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC81 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC64 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xE47 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP POP PUSH1 0xFF DUP7 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF DUP7 AND PUSH1 0x40 SWAP4 DUP5 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE SWAP2 SWAP1 KECCAK256 DUP3 MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH2 0xD24 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1A4A JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x40 SWAP5 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP1 SWAP2 AND PUSH1 0xFF SWAP5 DUP6 AND OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FF AND PUSH2 0x100 PUSH4 0xFFFFFFFF SWAP3 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE DUP4 MLOAD SWAP3 DUP8 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE DUP2 ADD DUP6 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP1 PUSH32 0x135B0348F308FF0DD1327C639A992D37786E313B6B100424477B900A075DDAA6 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP1 PUSH1 0x80 DUP2 ADD DUP7 DUP7 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG2 PUSH2 0xFDC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0xFF DUP6 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF DUP6 AND DUP3 DUP5 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0xEA5 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x1A4A JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x40 SWAP5 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP1 SWAP2 AND PUSH1 0xFF SWAP5 DUP6 AND OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FF AND PUSH2 0x100 PUSH4 0xFFFFFFFF SWAP3 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE DUP4 MLOAD SWAP3 DUP8 AND DUP4 DUP4 ADD MSTORE DUP6 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD MSTORE DUP3 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND SWAP3 PUSH32 0x135B0348F308FF0DD1327C639A992D37786E313B6B100424477B900A075DDAA6 SWAP3 DUP6 SWAP3 DUP9 SWAP3 DUP9 SWAP3 SWAP2 DUP3 SWAP2 PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF9F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF87 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xFCC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xFFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1029 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x10A1 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1047 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x105A DUP2 PUSH2 0x1598 JUMP JUMPDEST ISZERO PUSH2 0x1098 JUMPI DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x106C JUMPI INVALID JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1030 JUMP JUMPDEST POP DUP1 DUP5 MLOAD EQ PUSH2 0x10AE JUMPI DUP1 DUP3 MSTORE JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x10DE PUSH2 0x1AC8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0x2 PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SWAP2 AND DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP2 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP2 ADD DUP4 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 SWAP1 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x11B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1186 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1194 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 SWAP3 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP4 ADD MLOAD SWAP3 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP8 SWAP2 SWAP7 POP SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x127D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND DUP2 EQ PUSH2 0x73A JUMPI PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP4 AND SWAP1 PUSH32 0x900AA01828592AB069E4D44E7A36C70EBD476E35F567C7DB6A691E503B8029D8 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x139D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND CALLER EQ ISZERO PUSH2 0x1422 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0xFE2C619800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP5 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP5 MLOAD PUSH1 0x0 SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 PUSH4 0xFE2C6198 SWAP4 DUP8 SWAP4 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x151C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1504 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1549 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x157A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A2 PUSH2 0x1AC8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0x2 PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SWAP2 AND DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP2 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP2 ADD DUP4 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 SWAP1 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1675 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x164A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1675 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1658 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x40 SWAP3 DUP4 ADD MSTORE SWAP1 DUP3 ADD MLOAD SWAP2 SWAP3 POP AND PUSH2 0x16B6 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x817 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C5 DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x1498 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x16D3 DUP7 PUSH2 0x1708 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x16E7 DUP3 DUP3 DUP6 DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x1826 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP4 POP POP POP PUSH2 0x16FE DUP3 DUP5 DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0x1873 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1758 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x176C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x1782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x313CE56700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP7 POP DUP7 SWAP4 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP3 PUSH4 0x313CE567 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1804 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x181A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 SWAP6 SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND GT ISZERO PUSH2 0x184A JUMPI PUSH1 0xFF DUP4 DUP7 SUB AND PUSH1 0xA EXP SWAP4 SWAP1 SWAP4 MUL SWAP3 PUSH2 0x1867 JUMP JUMPDEST DUP3 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND LT ISZERO PUSH2 0x1867 JUMPI PUSH1 0xFF DUP6 DUP5 SUB AND PUSH1 0xA EXP SWAP6 SWAP1 SWAP6 MUL SWAP5 JUMPDEST POP SWAP4 SWAP5 SWAP2 SWAP4 POP SWAP1 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1897 PUSH4 0x3B9ACA00 PUSH2 0x1891 DUP8 PUSH4 0xFFFFFFFF DUP1 DUP9 AND SWAP1 PUSH2 0x18D3 AND JUMP JUMPDEST SWAP1 PUSH2 0x194F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 DUP7 GT ISZERO PUSH2 0x18B4 JUMPI PUSH2 0x18AD DUP7 DUP7 PUSH2 0x19D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x18C9 JUMP JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x18C9 JUMPI PUSH2 0x18C6 DUP6 DUP8 PUSH2 0x19D3 JUMP JUMPDEST SWAP1 POP JUMPDEST LT ISZERO SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18E2 JUMPI POP PUSH1 0x0 PUSH2 0x1949 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x18EF JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1946 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AFE PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x19BF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x19CA JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1A44 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1A8B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1AB8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1AB8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1AB8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1A9D JUMP JUMPDEST POP PUSH2 0x1AC4 SWAP3 SWAP2 POP PUSH2 0x1AE8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1AC4 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1AE9 JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A164736F6C63430007 STOP STOP EXP ",
				"sourceMap": "722:12779:3:-:0;;;2197:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2197:207:3;;;;;;;470:7:4;:18;;-1:-1:-1;;;;;;470:18:4;2293:10:3;470:18:4;;;2313:29:3::1;2197:207:::0;2313:15:::1;:29::i;:::-;2348:51;2377:21:::0;2348:28:::1;:51::i;:::-;2197:207:::0;;722:12779;;3057:274;1460:7:4;;-1:-1:-1;;;;;1460:7:4;1446:10;:21;1438:56;;;;;-1:-1:-1;;;1438:56:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;3174:7:3::1;::::0;-1:-1:-1;;;;;3174:7:3;;::::1;::::0;3192:24;::::1;::::0;::::1;3188:139;;3226:7;:38:::0;;-1:-1:-1;;;;;;3226:38:3::1;-1:-1:-1::0;;;;;3226:38:3;;::::1;::::0;;::::1;::::0;;;3277:43:::1;::::0;3226:38;;3277:43;::::1;::::0;::::1;::::0;-1:-1:-1;;3277:43:3::1;3188:139;1500:1:4;3057:274:3::0;:::o;2581:327::-;1460:7:4;;-1:-1:-1;;;;;1460:7:4;1446:10;:21;1438:56;;;;;-1:-1:-1;;;1438:56:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;2712:16:3::1;::::0;-1:-1:-1;;;;;2712:16:3;;::::1;::::0;2739:25;::::1;::::0;::::1;2735:169;;2774:16;:53:::0;;-1:-1:-1;;;;;;2774:53:3::1;-1:-1:-1::0;;;;;2774:53:3;;::::1;::::0;;::::1;::::0;;;2840:57:::1;::::0;2774:53;;2840:57;::::1;::::0;::::1;::::0;-1:-1:-1;;2840:57:3::1;1500:1:4;2581:327:3::0;:::o;722:12779::-;;;;;;;"
			},
			"deployedBytecode": {
				"immutableReferences": {},
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c806379ba50971161008c5780638da5cb5b116100665780638da5cb5b146104ed578063f0ba3ae1146104f5578063f1987695146105b7578063f2fde38b146105ea576100df565b806379ba5097146103a65780638417ca99146103ae578063870e5d511461044a576100df565b806364cc4aa5116100bd57806364cc4aa51461027c5780636e04ff0d146102ad578063725afd441461039e576100df565b806325c620b9146100e4578063317f17dc146101195780634585e33b1461020c575b600080fd5b610117600480360360208110156100fa57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661061d565b005b6101bc6004803603602081101561012f57600080fd5b81019060208101813564010000000081111561014a57600080fd5b82018360208201111561015c57600080fd5b8035906020019184602083028401116401000000008311171561017e57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061073e945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101f85781810151838201526020016101e0565b505050509050019250505060405180910390f35b6101176004803603602081101561022257600080fd5b81019060208101813564010000000081111561023d57600080fd5b82018360208201111561024f57600080fd5b8035906020019184600183028401116401000000008311171561027157600080fd5b50909250905061081c565b610284610834565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61031d600480360360208110156102c357600080fd5b8101906020810181356401000000008111156102de57600080fd5b8201836020820111156102f057600080fd5b8035906020019184600183028401116401000000008311171561031257600080fd5b509092509050610850565b60405180831515815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561036257818101518382015260200161034a565b50505050905090810190601f16801561038f5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6102846108de565b6101176108fa565b610117600480360360808110156103c457600080fd5b73ffffffffffffffffffffffffffffffffffffffff82351691908101906040810160208201356401000000008111156103fc57600080fd5b82018360208201111561040e57600080fd5b8035906020019184600183028401116401000000008311171561043057600080fd5b9193509150803560ff16906020013563ffffffff166109fc565b6101bc6004803603602081101561046057600080fd5b81019060208101813564010000000081111561047b57600080fd5b82018360208201111561048d57600080fd5b803590602001918460208302840111640100000000831117156104af57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610fe4945050505050565b6102846110b5565b6105286004803603602081101561050b57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166110d1565b60405180806020018460ff1681526020018363ffffffff168152602001828103825285818151815260200191508051906020019080838360005b8381101561057a578181015183820152602001610562565b50505050905090810190601f1680156105a75780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b610117600480360360208110156105cd57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166111f7565b6101176004803603602081101561060057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611317565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106a357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b60035473ffffffffffffffffffffffffffffffffffffffff908116908216811461073a57600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84811691821790925560405190918316907fd37715469c4865e142b38d226fd2732c830e5acb6338e1b3007a8a0b689f766790600090a35b5050565b60608061074a83610fe4565b6002546040517f760bc82d00000000000000000000000000000000000000000000000000000000815260206004820181815284516024840152845194955073ffffffffffffffffffffffffffffffffffffffff9093169363760bc82d93869390928392604490920191818601910280838360005b838110156107d65781810151838201526020016107be565b5050505090500192505050600060405180830381600087803b1580156107fb57600080fd5b505af115801561080f573d6000803e3d6000fd5b509293505050505b919050565b61082f8282602081101561012f57600080fd5b505050565b60025473ffffffffffffffffffffffffffffffffffffffff1690565b60006060806108688585602081101561046057600080fd5b9050600080825111905080826040516020018080602001828103825283818151815260200191508051906020019060200280838360005b838110156108b757818101518382015260200161089f565b50505050905001925050506040516020818303038152906040529350935050509250929050565b60035473ffffffffffffffffffffffffffffffffffffffff1690565b60015473ffffffffffffffffffffffffffffffffffffffff16331461098057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e657200000000000000000000604482015290519081900360640190fd5b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a8257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b60008163ffffffff16118015610aa25750633b9aca008163ffffffff1611155b610b0d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c6964207468726573686f6c64206e756d657261746f720000000000604482015290519081900360640190fd5b610b4c84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061149892505050565b610bb757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c696420436f6d706f756e6420707269636500000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff851660009081526004602090815260409182902080548351601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610c815780601f10610c5657610100808354040283529160200191610c81565b820191906000526020600020905b815481529060010190602001808311610c6457829003601f168201915b50505050509050805160001415610e4757604051806060016040528086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250505060ff861660208084019190915263ffffffff861660409384015273ffffffffffffffffffffffffffffffffffffffff8a16825260048152919020825180519192610d2492849290910190611a4a565b5060208281015160019290920180546040948501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090911660ff948516177fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ff1661010063ffffffff92831602179091558351928716918301919091528416918101919091526060808252810185905273ffffffffffffffffffffffffffffffffffffffff8716907f135b0348f308ff0dd1327c639a992d37786e313b6b100424477b900a075ddaa69087908790879087908060808101868680828437600083820152604051601f9091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690920182900397509095505050505050a2610fdc565b6040805160608101825282815260ff851660208083019190915263ffffffff85168284015273ffffffffffffffffffffffffffffffffffffffff8916600090815260048252929092208151805192939192610ea59284920190611a4a565b5060208281015160019290920180546040948501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090911660ff948516177fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ff1661010063ffffffff92831602179091558351928716838301528516928201929092526060808252835190820152825173ffffffffffffffffffffffffffffffffffffffff8916927f135b0348f308ff0dd1327c639a992d37786e313b6b100424477b900a075ddaa69285928892889291829160808301919087019080838360005b83811015610f9f578181015183820152602001610f87565b50505050905090810190601f168015610fcc5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a25b505050505050565b606080825167ffffffffffffffff81118015610fff57600080fd5b50604051908082528060200260200182016040528015611029578160200160208202803683370190505b5090506000805b84518110156110a157600085828151811061104757fe5b6020026020010151905061105a81611598565b15611098578084848151811061106c57fe5b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101526001909201915b50600101611030565b50808451146110ae578082525b5092915050565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60606000806110de611ac8565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600460209081526040918290208251815460026001821615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190911604601f810184900490930281016080908101909452606081018381529093919284928491908401828280156111b15780601f10611186576101008083540402835291602001916111b1565b820191906000526020600020905b81548152906001019060200180831161119457829003601f168201915b50505091835250506001919091015460ff811660208084019190915261010090910463ffffffff1660409283015282519083015192909101519097919650945092505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461127d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b60025473ffffffffffffffffffffffffffffffffffffffff908116908216811461073a57600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84811691821790925560405190918316907f900aa01828592ab069e4d44e7a36c70ebd476e35f567c7db6a691e503b8029d890600090a35050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461139d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff811633141561142257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015290519081900360640190fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6003546040517ffe2c619800000000000000000000000000000000000000000000000000000000815260206004820181815284516024840152845160009473ffffffffffffffffffffffffffffffffffffffff169363fe2c6198938793928392604401918501908083838b5b8381101561151c578181015183820152602001611504565b50505050905090810190601f1680156115495780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561156657600080fd5b505afa15801561157a573d6000803e3d6000fd5b505050506040513d602081101561159057600080fd5b505192915050565b60006115a2611ac8565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600460209081526040918290208251815460026001821615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190911604601f810184900490930281016080908101909452606081018381529093919284928491908401828280156116755780601f1061164a57610100808354040283529160200191611675565b820191906000526020600020905b81548152906001019060200180831161165857829003601f168201915b50505091835250506001919091015460ff8116602083015263ffffffff610100909104811660409283015290820151919250166116b6576000915050610817565b60006116c58260000151611498565b90506000806116d386611708565b915091506116e78282858760200151611826565b80945081935050506116fe82848660400151611873565b9695505050505050565b600080600083905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561175857600080fd5b505afa15801561176c573d6000803e3d6000fd5b505050506040513d60a081101561178257600080fd5b50602090810151604080517f313ce567000000000000000000000000000000000000000000000000000000008152905191965086935073ffffffffffffffffffffffffffffffffffffffff85169263313ce56792600480840193829003018186803b1580156117f057600080fd5b505afa158015611804573d6000803e3d6000fd5b505050506040513d602081101561181a57600080fd5b50519395939450505050565b6000808260ff168560ff16111561184a5760ff83860316600a0a9390930292611867565b8260ff168560ff1610156118675760ff85840316600a0a95909502945b50939491935090915050565b600080611897633b9aca006118918763ffffffff808816906118d316565b9061194f565b90506000848611156118b4576118ad86866119d3565b90506118c9565b848610156118c9576118c685876119d3565b90505b1015949350505050565b6000826118e257506000611949565b828202828482816118ef57fe5b0414611946576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611afe6021913960400191505060405180910390fd5b90505b92915050565b60008082116119bf57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b60008284816119ca57fe5b04949350505050565b600082821115611a4457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a8b57805160ff1916838001178555611ab8565b82800160010185558215611ab8579182015b82811115611ab8578251825591602001919060010190611a9d565b50611ac4929150611ae8565b5090565b604080516060808201835281526000602082018190529181019190915290565b5b80821115611ac45760008155600101611ae956fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a164736f6c6343000700000a",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xF0BA3AE1 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0xF1987695 EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5EA JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x8417CA99 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x870E5D51 EQ PUSH2 0x44A JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x64CC4AA5 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x64CC4AA5 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x725AFD44 EQ PUSH2 0x39E JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x25C620B9 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x317F17DC EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x20C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x61D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x73E SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E0 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x81C JUMP JUMPDEST PUSH2 0x284 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x362 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x34A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x38F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x117 PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x9FC JUMP JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xFE4 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x284 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x528 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x57A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x562 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5A7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x6A3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND DUP2 EQ PUSH2 0x73A JUMPI PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP4 AND SWAP1 PUSH32 0xD37715469C4865E142B38D226FD2732C830E5ACB6338E1B3007A8A0B689F7667 SWAP1 PUSH1 0x0 SWAP1 LOG3 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x74A DUP4 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0x760BC82D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP5 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP5 MLOAD SWAP5 SWAP6 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND SWAP4 PUSH4 0x760BC82D SWAP4 DUP7 SWAP4 SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP3 ADD SWAP2 DUP2 DUP7 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7BE JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x80F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82F DUP3 DUP3 PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0x868 DUP6 DUP6 PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 MLOAD GT SWAP1 POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8B7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x89F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x980 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xA82 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0xAA2 JUMPI POP PUSH4 0x3B9ACA00 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO JUMPDEST PUSH2 0xB0D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207468726573686F6C64206E756D657261746F720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xB4C DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1498 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBB7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420436F6D706F756E6420707269636500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP5 SWAP1 DIV DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC81 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC56 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC81 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC64 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xE47 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP POP PUSH1 0xFF DUP7 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF DUP7 AND PUSH1 0x40 SWAP4 DUP5 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE SWAP2 SWAP1 KECCAK256 DUP3 MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH2 0xD24 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1A4A JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x40 SWAP5 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP1 SWAP2 AND PUSH1 0xFF SWAP5 DUP6 AND OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FF AND PUSH2 0x100 PUSH4 0xFFFFFFFF SWAP3 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE DUP4 MLOAD SWAP3 DUP8 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE DUP2 ADD DUP6 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP1 PUSH32 0x135B0348F308FF0DD1327C639A992D37786E313B6B100424477B900A075DDAA6 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP1 PUSH1 0x80 DUP2 ADD DUP7 DUP7 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG2 PUSH2 0xFDC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0xFF DUP6 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF DUP6 AND DUP3 DUP5 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0xEA5 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x1A4A JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x40 SWAP5 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP1 SWAP2 AND PUSH1 0xFF SWAP5 DUP6 AND OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FF AND PUSH2 0x100 PUSH4 0xFFFFFFFF SWAP3 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE DUP4 MLOAD SWAP3 DUP8 AND DUP4 DUP4 ADD MSTORE DUP6 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD MSTORE DUP3 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND SWAP3 PUSH32 0x135B0348F308FF0DD1327C639A992D37786E313B6B100424477B900A075DDAA6 SWAP3 DUP6 SWAP3 DUP9 SWAP3 DUP9 SWAP3 SWAP2 DUP3 SWAP2 PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF9F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF87 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xFCC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xFFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1029 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x10A1 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1047 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x105A DUP2 PUSH2 0x1598 JUMP JUMPDEST ISZERO PUSH2 0x1098 JUMPI DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x106C JUMPI INVALID JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1030 JUMP JUMPDEST POP DUP1 DUP5 MLOAD EQ PUSH2 0x10AE JUMPI DUP1 DUP3 MSTORE JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x10DE PUSH2 0x1AC8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0x2 PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SWAP2 AND DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP2 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP2 ADD DUP4 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 SWAP1 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x11B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1186 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1194 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 SWAP3 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP4 ADD MLOAD SWAP3 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP8 SWAP2 SWAP7 POP SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x127D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND DUP2 EQ PUSH2 0x73A JUMPI PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP4 AND SWAP1 PUSH32 0x900AA01828592AB069E4D44E7A36C70EBD476E35F567C7DB6A691E503B8029D8 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x139D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND CALLER EQ ISZERO PUSH2 0x1422 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0xFE2C619800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP5 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP5 MLOAD PUSH1 0x0 SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 PUSH4 0xFE2C6198 SWAP4 DUP8 SWAP4 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x151C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1504 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1549 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x157A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A2 PUSH2 0x1AC8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0x2 PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SWAP2 AND DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP2 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP2 ADD DUP4 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 SWAP1 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1675 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x164A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1675 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1658 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x40 SWAP3 DUP4 ADD MSTORE SWAP1 DUP3 ADD MLOAD SWAP2 SWAP3 POP AND PUSH2 0x16B6 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x817 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C5 DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x1498 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x16D3 DUP7 PUSH2 0x1708 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x16E7 DUP3 DUP3 DUP6 DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x1826 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP4 POP POP POP PUSH2 0x16FE DUP3 DUP5 DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0x1873 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1758 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x176C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x1782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x313CE56700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP7 POP DUP7 SWAP4 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP3 PUSH4 0x313CE567 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1804 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x181A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 SWAP6 SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND GT ISZERO PUSH2 0x184A JUMPI PUSH1 0xFF DUP4 DUP7 SUB AND PUSH1 0xA EXP SWAP4 SWAP1 SWAP4 MUL SWAP3 PUSH2 0x1867 JUMP JUMPDEST DUP3 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND LT ISZERO PUSH2 0x1867 JUMPI PUSH1 0xFF DUP6 DUP5 SUB AND PUSH1 0xA EXP SWAP6 SWAP1 SWAP6 MUL SWAP5 JUMPDEST POP SWAP4 SWAP5 SWAP2 SWAP4 POP SWAP1 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1897 PUSH4 0x3B9ACA00 PUSH2 0x1891 DUP8 PUSH4 0xFFFFFFFF DUP1 DUP9 AND SWAP1 PUSH2 0x18D3 AND JUMP JUMPDEST SWAP1 PUSH2 0x194F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 DUP7 GT ISZERO PUSH2 0x18B4 JUMPI PUSH2 0x18AD DUP7 DUP7 PUSH2 0x19D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x18C9 JUMP JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x18C9 JUMPI PUSH2 0x18C6 DUP6 DUP8 PUSH2 0x19D3 JUMP JUMPDEST SWAP1 POP JUMPDEST LT ISZERO SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18E2 JUMPI POP PUSH1 0x0 PUSH2 0x1949 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x18EF JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1946 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AFE PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x19BF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x19CA JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1A44 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1A8B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1AB8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1AB8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1AB8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1A9D JUMP JUMPDEST POP PUSH2 0x1AC4 SWAP3 SWAP2 POP PUSH2 0x1AE8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1AC4 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1AE9 JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A164736F6C63430007 STOP STOP EXP ",
				"sourceMap": "722:12779:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2581:327;;;;;;;;;;;;;;;;-1:-1:-1;2581:327:3;;;;:::i;:::-;;6690:252;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6690:252:3;;-1:-1:-1;6690:252:3;;-1:-1:-1;;;;;6690:252:3:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8056:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8056:128:3;;-1:-1:-1;8056:128:3;-1:-1:-1;8056:128:3;:::i;8825:109::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7419:337;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7419:337:3;;-1:-1:-1;7419:337:3;-1:-1:-1;7419:337:3;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9021:131;;;:::i;912:262:4:-;;;:::i;4027:1365:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4027:1365:3;-1:-1:-1;4027:1365:3;;;;;;;;;;;:::i;5729:615::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5729:615:3;;-1:-1:-1;5729:615:3;;-1:-1:-1;;;;;5729:615:3:i;1225:98:4:-;;;:::i;8416:337:3:-;;;;;;;;;;;;;;;;-1:-1:-1;8416:337:3;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3057:274;;;;;;;;;;;;;;;;-1:-1:-1;3057:274:3;;;;:::i;602:218:4:-;;;;;;;;;;;;;;;;-1:-1:-1;602:218:4;;;;:::i;2581:327:3:-;1460:7:4;;;;1446:10;:21;1438:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2712:16:3::1;::::0;::::1;::::0;;::::1;::::0;2739:25;::::1;::::0;::::1;2735:169;;2774:16;:53:::0;;;::::1;;::::0;;::::1;::::0;;::::1;::::0;;;2840:57:::1;::::0;2774:53;;2840:57;::::1;::::0;::::1;::::0;-1:-1:-1;;2840:57:3::1;2735:169;1500:1:4;2581:327:3::0;:::o;6690:252::-;6775:16;6806:35;6844:18;6850:11;6844:5;:18::i;:::-;6868:7;;:38;;;;;;;;;;;;;;;;;;;;6806:56;;-1:-1:-1;6868:7:3;;;;;:18;;6806:56;;6868:38;;;;;;;;;;;;;;;;;:7;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6919:18:3;;-1:-1:-1;;;;6690:252:3;;;;:::o;8056:128::-;8142:37;8160:4;;8149:29;;;;;;;;;8142:37;;8056:128;;:::o;8825:109::-;8921:7;;;;8825:109;:::o;7419:337::-;7524:4;7536:12;7563:35;7601:36;7618:4;;7607:29;;;;;;;;;7601:36;7563:74;;7643:16;7691:1;7663:18;:25;:29;7643:50;;7707:11;7731:18;7720:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7699:52;;;;;;7419:337;;;;;:::o;9021:131::-;9130:16;;;;9021:131;:::o;912:262:4:-;982:14;;;;968:10;:28;960:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1030:16;1049:7;;1072:10;1062:20;;;;;;;;-1:-1:-1;1088:27:4;;;;;;;1127:42;;1049:7;;;;;1072:10;;1049:7;;1127:42;;;912:262;:::o;4027:1365:3:-;1460:7:4;;;;1446:10;:21;1438:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4275:1:3::1;4237:35;:39;;;:95;;;;;1376:13;4286:35;:46;;;;4237:95;4229:135;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;4378:32;4395:14;;4378:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;4378:16:3::1;::::0;-1:-1:-1;;;4378:32:3:i:1;:::-;4370:72;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;4478:25;::::0;::::1;;::::0;;;:13:::1;:25;::::0;;;;;;;;4448:62;;;;::::1;;::::0;::::1;;::::0;::::1;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;:27:::1;::::0;:62;;::::1;4478:25:::0;4448:62;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4571:13;4565:27;4596:1;4565:32;4561:827;;;4635:171;;;;;;;;4673:14;;4635:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;-1:-1:-1;4635:171:3;;;-1:-1:-1;;;4635:171:3::1;::::0;::::1;;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;4607:25:::1;::::0;::::1;::::0;;:13:::1;:25:::0;;;;;:199;;;;:25;;:199:::1;::::0;:25;;:199;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;4607:199:3::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;;::::0;;::::1;;::::0;::::1;;;::::0;;::::1;;;::::0;;;4819:137;;;;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;;;;;;;;;;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;4863:14;;4819:137;;;;;;;;;;4863:14;4819:137;;4863:14;4819:137;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;4819:137:3;;-1:-1:-1;;;;;;4819:137:3::1;4561:827;;;5062:170;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;5034:25:::1;::::0;::::1;-1:-1:-1::0;5034:25:3;;;:13:::1;:25:::0;;;;;;:198;;;;5062:170;;5034:25;;:198:::1;::::0;:25;;:198:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;5034:198:3::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;;::::0;;::::1;;::::0;::::1;;;::::0;;::::1;;;::::0;;;5245:136;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;::::1;::::0;;;;-1:-1:-1;5245:136:3::1;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4561:827;1500:1:4;4027:1365:3::0;;;;;:::o;5729:615::-;5822:16;5853:35;5905:11;:18;5891:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5891:33:3;;5853:71;;5930:20;5965:9;5960:222;5984:11;:18;5980:1;:22;5960:222;;;6017:18;6038:11;6050:1;6038:14;;;;;;;;;;;;;;6017:35;;6064:22;6075:10;6064;:22::i;:::-;6060:116;;;6133:10;6098:18;6117:12;6098:32;;;;;;;;:45;;;;:32;;;;;;;;;;;:45;6153:14;;;;;6060:116;-1:-1:-1;6004:3:3;;5960:222;;;;6214:12;6192:11;:18;:34;6188:121;;6282:12;6262:18;6255:40;6245:58;-1:-1:-1;6321:18:3;5729:615;-1:-1:-1;;5729:615:3:o;1225:98:4:-;1282:7;1311;;;1225:98;:::o;8416:337:3:-;8508:13;8529:5;8542:6;8563:38;;:::i;:::-;8604:25;;;;;;;:13;:25;;;;;;;;;8563:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8604:25;;8563:66;;8604:25;;8563:66;;;8604:25;8563:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8563:66:3;;;-1:-1:-1;;8563:66:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;8649:18;;8675:20;;;;8703:39;;;;;8649:18;;8675:20;;-1:-1:-1;8703:39:3;-1:-1:-1;8416:337:3;-1:-1:-1;;;8416:337:3:o;3057:274::-;1460:7:4;;;;1446:10;:21;1438:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3174:7:3::1;::::0;::::1;::::0;;::::1;::::0;3192:24;::::1;::::0;::::1;3188:139;;3226:7;:38:::0;;;::::1;;::::0;;::::1;::::0;;::::1;::::0;;;3277:43:::1;::::0;3226:38;;3277:43;::::1;::::0;::::1;::::0;-1:-1:-1;;3277:43:3::1;1500:1:4;3057:274:3::0;:::o;602:218:4:-;1460:7;;;;1446:10;:21;1438:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;694:16:::1;::::0;::::1;700:10;694:16;;686:52;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;745:14;:19:::0;;;::::1;;::::0;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;803:7:4;;776:39:::1;::::0;745:19;;803:7:::1;::::0;776:39:::1;::::0;-1:-1:-1;776:39:4::1;602:218:::0;:::o;9296:161:3:-;9422:16;;:30;;;;;;;;;;;;;;;;;;;;9393:7;;9422:16;;;:22;;9445:6;;9422:30;;;;;;;;;;;;9393:7;9422:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9422:30:3;;9296:161;-1:-1:-1;;9296:161:3:o;9757:849::-;9846:12;9873:38;;:::i;:::-;9914:25;;;;;;;:13;:25;;;;;;;;;9873:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9914:25;;9873:66;;9914:25;;9873:66;;;9914:25;9873:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9873:66:3;;;-1:-1:-1;;9873:66:3;;;;;;;;;;;;;;;;;;;;;;;;;9949:39;;;;9873:66;;-1:-1:-1;9949:44:3;9945:77;;10010:5;10003:12;;;;;9945:77;10064:17;10084:36;10101:11;:18;;;10084:16;:36::i;:::-;10064:56;;10127:23;10152:24;10180:29;10198:10;10180:17;:29::i;:::-;10126:83;;;;10312:120;10340:15;10363:18;10389:9;10406:11;:20;;;10312;:120::i;:::-;10281:151;;;;;;;;10508:93;10533:15;10550:9;10561:11;:39;;;10508:24;:93::i;:::-;10501:100;9757:849;-1:-1:-1;;;;;;9757:849:3:o;10776:349::-;10872:13;10893:14;10922:31;10978:10;10922:67;;10997:18;11022:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11022:27:3;;;;;;11100:20;;;;;;;11022:27;;-1:-1:-1;11022:27:3;;-1:-1:-1;11100:18:3;;;;;;:20;;;;;;;;;;:18;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11100:20:3;10776:349;;11100:20;;-1:-1:-1;;;;10776:349:3:o;11625:788::-;11814:31;11853:29;11922:16;11901:37;;:18;:37;;;11897:422;;;12031:13;11961:37;;;12031:13;12027:2;:17;12068:26;;;;;11897:422;;;12136:16;12115:37;;:18;:37;;;12111:208;;;12245:13;12175:37;;;12245:13;12241:2;:17;12284:28;;;;;12111:208;-1:-1:-1;12350:15:3;;12395:13;;-1:-1:-1;11625:788:3;;-1:-1:-1;;11625:788:3:o;12823:676::-;12994:20;;13124:61;1376:13;13124:48;:15;:48;;;;;:19;:48;:::i;:::-;:52;;:61::i;:::-;13089:96;;13219:17;13264:9;13246:15;:27;13242:190;;;13295:30;:15;13315:9;13295:19;:30::i;:::-;13283:42;;13242:190;;;13364:9;13346:15;:27;13342:90;;;13395:30;:9;13409:15;13395:13;:30::i;:::-;13383:42;;13342:90;13456:37;;;12823:676;-1:-1:-1;;;;12823:676:3:o;1746:456:36:-;1835:7;2066:6;2062:35;;-1:-1:-1;2089:1:36;2082:8;;2062:35;2115:5;;;2119:1;2115;:5;:1;2134:5;;;;;:10;2126:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2196:1;-1:-1:-1;1746:456:36;;;;;:::o;2643:342::-;2732:7;2828:1;2824;:5;2816:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2866:9;2882:1;2878;:5;;;;;;;2643:342;-1:-1:-1;;;;2643:342:36:o;1315:203::-;1404:7;1439:1;1434;:6;;1426:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1493:5:36;;;1315:203::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;"
			},
			"methodIdentifiers": {
				"acceptOwnership()": "79ba5097",
				"check(address[])": "870e5d51",
				"checkUpkeep(bytes)": "6e04ff0d",
				"compoundOpenOracle()": "725afd44",
				"flags()": "64cc4aa5",
				"getFeedDetails(address)": "f0ba3ae1",
				"owner()": "8da5cb5b",
				"performUpkeep(bytes)": "4585e33b",
				"setCompoundOpenOracleAddress(address)": "25c620b9",
				"setFeedDetails(address,string,uint8,uint32)": "8417ca99",
				"setFlagsAddress(address)": "f1987695",
				"transferOwnership(address)": "f2fde38b",
				"update(address[])": "317f17dc"
			}
		},
		"metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flagsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"compoundOracleAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"CompoundOpenOracleAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"deviationThresholdNumerator\",\"type\":\"uint32\"}],\"name\":\"FeedDetailsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"FlagsAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"aggregators\",\"type\":\"address[]\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compoundOpenOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flags\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"getFeedDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"}],\"name\":\"setCompoundOpenOracleAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"compoundSymbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"compoundDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"compoundDeviationThresholdNumerator\",\"type\":\"uint32\"}],\"name\":\"setFeedDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flagsAddress\",\"type\":\"address\"}],\"name\":\"setFlagsAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"aggregators\",\"type\":\"address[]\"}],\"name\":\"update\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"check(address[])\":{\"details\":\"If any of the aggregators provided have an equivalent Compound Oracle feed that with a price outside of the configured deviation, this function will return them.\",\"params\":{\"aggregators\":\"address[] memory\"},\"returns\":{\"_0\":\"address[] invalid feeds\"}},\"checkUpkeep(bytes)\":{\"details\":\"If any of the aggregators provided have an equivalent Compound Oracle feed that with a price outside of the configured deviation, this function will return them.\",\"params\":{\"data\":\"bytes encoded address array\"},\"returns\":{\"_0\":\"needsUpkeep bool indicating whether upkeep needs to be performed\",\"_1\":\"invalid aggregators - bytes encoded address array of invalid aggregator addresses\"}},\"compoundOpenOracle()\":{\"returns\":{\"_0\":\"address\"}},\"constructor\":{\"details\":\"Use this contract to compare Chainlink aggregator prices against the Compound Open Oracle prices\",\"params\":{\"compoundOracleAddress\":\"Address of the Compound Open Oracle UniswapAnchoredView contract\",\"flagsAddress\":\"Address of the flag contract\"}},\"flags()\":{\"returns\":{\"_0\":\"address\"}},\"getFeedDetails(address)\":{\"params\":{\"aggregator\":\"address\"},\"returns\":{\"_0\":\"string Compound Oracle Symbol\",\"_1\":\"uint8 Compound Oracle Decimals\",\"_2\":\"uint32 Deviation Threshold Numerator\"}},\"performUpkeep(bytes)\":{\"details\":\"This contract must have write permissions on the Flags contract\",\"params\":{\"data\":\"bytes encoded address array\"}},\"setCompoundOpenOracleAddress(address)\":{\"params\":{\"oracleAddress\":\"Compound Open Oracle UniswapAnchoredView address\"}},\"setFeedDetails(address,string,uint8,uint32)\":{\"params\":{\"aggregator\":\"The Chainlink aggregator address\",\"compoundDecimals\":\"The number of decimals in the Compound feed\",\"compoundDeviationThresholdNumerator\":\"The threshold numerator use to determine the percentage with which the difference in prices must reside within. Parts per billion.   For example:     If prices are valid within a 5% threshold, assuming x is the compoundDeviationThresholdNumerator:     x / 1,000,000,000 = 0.05     x = 50,000,000\",\"compoundSymbol\":\"The symbol used by Compound for this feed\"}},\"setFlagsAddress(address)\":{\"params\":{\"flagsAddress\":\"sets the address of the flags contract\"}},\"update(address[])\":{\"details\":\"This contract must have write permissions on the Flags contract\",\"params\":{\"aggregators\":\"address[] memory\"},\"returns\":{\"_0\":\"address[] memory invalid aggregators\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"check(address[])\":{\"notice\":\"Check the price deviation of an array of aggregators\"},\"checkUpkeep(bytes)\":{\"notice\":\"Check the price deviation of an array of aggregators\"},\"compoundOpenOracle()\":{\"notice\":\"Get the Compound Open Oracle address\"},\"constructor\":{\"notice\":\"Create a new CompoundPriceFlaggingValidator\"},\"flags()\":{\"notice\":\"Get the flags address\"},\"getFeedDetails(address)\":{\"notice\":\"Get the threshold of an aggregator\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"performUpkeep(bytes)\":{\"notice\":\"Check and raise flags for any aggregator that has an equivalent Compound Open Oracle feed with a price deviation exceeding the configured setting.\"},\"setCompoundOpenOracleAddress(address)\":{\"notice\":\"Set the address of the Compound Open Oracle UniswapAnchoredView contract\"},\"setFeedDetails(address,string,uint8,uint32)\":{\"notice\":\"Set the threshold details for comparing a Chainlink aggregator to a Compound Open Oracle feed.\"},\"setFlagsAddress(address)\":{\"notice\":\"Updates the flagging contract address for raising flags\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"},\"update(address[])\":{\"notice\":\"Check and raise flags for any aggregator that has an equivalent Compound Open Oracle feed with a price deviation exceeding the configured setting.\"}},\"notice\":\"This validator compares the price of Chainlink aggregators against their equivalent Compound Open Oracle feeds. For each aggregator, a Compound feed is configured with its symbol, number of decimals, and deviation threshold. An aggregator address is flagged when its corresponding Compound feed price deviates by more than the configured threshold from the aggregator price.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/thomas/workspace/chainlink/evm-contracts/src/v0.7/dev/CompoundPriceFlaggingValidator.sol\":\"CompoundPriceFlaggingValidator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/home/thomas/workspace/chainlink/evm-contracts/src/v0.7/dev/CompoundPriceFlaggingValidator.sol\":{\"keccak256\":\"0x346c4d8157437c4badd4a86c65c3e732191c4e168511c5307fb396af31757b29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4f145f609b697f0c56f8e3e04cb00e9aa04ad661ee85d7d2aea5149fad66938\",\"dweb:/ipfs/Qmcz1cETuD1aUBgh6bD2WBDH2pebPNQitVijAuqqR7ohmV\"]},\"/home/thomas/workspace/chainlink/evm-contracts/src/v0.7/dev/ConfirmedOwner.sol\":{\"keccak256\":\"0xb58bafca547d32b579fb0f68694455eb006278ba6716c5fcbc3dfd17bf8cb10d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://035a7c406d4d11dedf63b971f155f045f54b1d78ad41ea2c138e42da9f6eee84\",\"dweb:/ipfs/QmSTyEjaKmQnksH5hWc1zysCzGQBeqm2Y15cu1G8fGiW9e\"]},\"/home/thomas/workspace/chainlink/evm-contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x62c8752bb170233359e653c61d491d6a79fe1d7d7281377c5ac4e9c03ce811ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e38ee533afdf7d6d20a7c9fabc30ed1b904230402e7864db84d607dd2a570dfd\",\"dweb:/ipfs/QmUxobRD1bk13PZ398NrHGPjzKMYJSBTZKcgPNuEDRDMGY\"]},\"/home/thomas/workspace/chainlink/evm-contracts/src/v0.7/interfaces/FlagsInterface.sol\":{\"keccak256\":\"0x58d2cb73917d191163679c823eab45c6e785d9b270966313bed480ee3359275b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99d009ba6d18c2bc60d752e7081a29cf8ae22e0bd95ee553c32f20329f47f297\",\"dweb:/ipfs/QmUBvxSzhYUEoizNP9izLUsu4NtTNMF1Eb8Mv7ym8ySAqT\"]},\"/home/thomas/workspace/chainlink/evm-contracts/src/v0.7/interfaces/UniswapAnchoredView.sol\":{\"keccak256\":\"0x3ac3df15fcd185532f0bf413a7b01a2f1e05f5b1961a655142ffd3f8cb83a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://807e7b8d1ec6c232f8a84c1508bc08f71003b411c96c3ea851d21356ed29d3df\",\"dweb:/ipfs/QmcES5aYp4KkuXZWYp4qp1JoGfQrwiJWD8mkfA875ECgS6\"]},\"/home/thomas/workspace/chainlink/evm-contracts/src/v0.7/interfaces/UpkeepInterface.sol\":{\"keccak256\":\"0x5ecbcf30e91c27ef5f4043bcd17b76e4ae311413f2f6902ae8e880a2890df73c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d06984716a5d7f68d72fc1c3c9613c885b0d743677707de7b188dae8c304688b\",\"dweb:/ipfs/QmbVNtLuxtMm3QqFC2WjZa3u5hQ5384Lm2o8n5LC38yFfo\"]},\"/home/thomas/workspace/chainlink/evm-contracts/src/v0.7/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0xdef991bae78444c98da33e88e81682001bb5bb9541ec19b1a05c19df8bbbff8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://684404db5f34ead354c37a01566c3568a187903355211f97cb60118e868397fd\",\"dweb:/ipfs/QmbZR3LxbVh1bBK6JhJGHRDAGn7GAtHVsB1FxxnDYRBQs8\"]}},\"version\":1}",
		"userdoc": {
			"kind": "user",
			"methods": {
				"acceptOwnership()": {
					"notice": "Allows an ownership transfer to be completed by the recipient."
				},
				"check(address[])": {
					"notice": "Check the price deviation of an array of aggregators"
				},
				"checkUpkeep(bytes)": {
					"notice": "Check the price deviation of an array of aggregators"
				},
				"compoundOpenOracle()": {
					"notice": "Get the Compound Open Oracle address"
				},
				"constructor": {
					"notice": "Create a new CompoundPriceFlaggingValidator"
				},
				"flags()": {
					"notice": "Get the flags address"
				},
				"getFeedDetails(address)": {
					"notice": "Get the threshold of an aggregator"
				},
				"owner()": {
					"notice": "Get the current owner"
				},
				"performUpkeep(bytes)": {
					"notice": "Check and raise flags for any aggregator that has an equivalent Compound Open Oracle feed with a price deviation exceeding the configured setting."
				},
				"setCompoundOpenOracleAddress(address)": {
					"notice": "Set the address of the Compound Open Oracle UniswapAnchoredView contract"
				},
				"setFeedDetails(address,string,uint8,uint32)": {
					"notice": "Set the threshold details for comparing a Chainlink aggregator to a Compound Open Oracle feed."
				},
				"setFlagsAddress(address)": {
					"notice": "Updates the flagging contract address for raising flags"
				},
				"transferOwnership(address)": {
					"notice": "Allows an owner to begin transferring ownership to a new address, pending."
				},
				"update(address[])": {
					"notice": "Check and raise flags for any aggregator that has an equivalent Compound Open Oracle feed with a price deviation exceeding the configured setting."
				}
			},
			"notice": "This validator compares the price of Chainlink aggregators against their equivalent Compound Open Oracle feeds. For each aggregator, a Compound feed is configured with its symbol, number of decimals, and deviation threshold. An aggregator address is flagged when its corresponding Compound feed price deviates by more than the configured threshold from the aggregator price.",
			"version": 1
		}
	},
	"sources": {
		"dev/CompoundPriceFlaggingValidator.sol": {
			"id": 3
		},
		"dev/ConfirmedOwner.sol": {
			"id": 4
		},
		"vendor/SafeMathChainlink.sol": {
			"id": 36
		},
		"interfaces/FlagsInterface.sol": {
			"id": 18
		},
		"interfaces/AggregatorV3Interface.sol": {
			"id": 15
		},
		"interfaces/UniswapAnchoredView.sol": {
			"id": 23
		},
		"interfaces/UpkeepInterface.sol": {
			"id": 24
		}
	},
	"sourceCodes": {
		"dev/CompoundPriceFlaggingValidator.sol": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport \"./ConfirmedOwner.sol\";\nimport \"../vendor/SafeMathChainlink.sol\";\nimport \"../interfaces/FlagsInterface.sol\";\nimport \"../interfaces/AggregatorV3Interface.sol\";\nimport \"../interfaces/UniswapAnchoredView.sol\";\nimport \"../interfaces/UpkeepInterface.sol\";\n\n/**\n * @notice This validator compares the price of Chainlink aggregators against\n * their equivalent Compound Open Oracle feeds. For each aggregator, a Compound\n * feed is configured with its symbol, number of decimals, and deviation threshold.\n * An aggregator address is flagged when its corresponding Compound feed price deviates\n * by more than the configured threshold from the aggregator price.\n */\ncontract CompoundPriceFlaggingValidator is ConfirmedOwner, UpkeepInterface {\n  using SafeMathChainlink for uint256;\n\n  struct CompoundFeedDetails {\n    // Used to call the Compound Open Oracle\n    string symbol;\n    // Used to convert price to match aggregator decimals\n    uint8 decimals;\n    // The numerator used to determine the threshold percentage\n    // as parts per billion.\n    // 1,000,000,000 = 100%\n    //   500,000,000 = 50%\n    //   100,000,000 = 10%\n    //    50,000,000 = 5%\n    //    10,000,000 = 1%\n    //     2,000,000 = 0.2%\n    //                 etc\n    uint32 deviationThresholdNumerator;\n  }\n\n  uint256 private constant BILLION = 1_000_000_000;\n\n  FlagsInterface private s_flags;\n  UniswapAnchoredView private s_compOpenOracle;\n  mapping(address => CompoundFeedDetails) private s_feedDetails;\n\n  event CompoundOpenOracleAddressUpdated(\n    address indexed from,\n    address indexed to\n  );\n  event FlagsAddressUpdated(\n    address indexed from,\n    address indexed to\n  );\n  event FeedDetailsSet(\n    address indexed aggregator,\n    string symbol,\n    uint8 decimals,\n    uint32 deviationThresholdNumerator\n  );\n  \n  /**\n   * @notice Create a new CompoundPriceFlaggingValidator\n   * @dev Use this contract to compare Chainlink aggregator prices\n   * against the Compound Open Oracle prices\n   * @param flagsAddress Address of the flag contract\n   * @param compoundOracleAddress Address of the Compound Open Oracle UniswapAnchoredView contract\n   */\n  constructor(\n    address flagsAddress,\n    address compoundOracleAddress\n  )\n    ConfirmedOwner(msg.sender)\n  {\n    setFlagsAddress(flagsAddress);\n    setCompoundOpenOracleAddress(compoundOracleAddress);\n  }\n\n  /**\n   * @notice Set the address of the Compound Open Oracle UniswapAnchoredView contract\n   * @param oracleAddress Compound Open Oracle UniswapAnchoredView address\n   */\n  function setCompoundOpenOracleAddress(\n    address oracleAddress\n  )\n    public\n    onlyOwner()\n  {\n    address previous = address(s_compOpenOracle);\n    if (previous != oracleAddress) {\n      s_compOpenOracle = UniswapAnchoredView(oracleAddress);\n      emit CompoundOpenOracleAddressUpdated(previous, oracleAddress);\n    }\n  }\n\n  /**\n   * @notice Updates the flagging contract address for raising flags\n   * @param flagsAddress sets the address of the flags contract\n   */\n  function setFlagsAddress(\n    address flagsAddress\n  )\n    public\n    onlyOwner()\n  {\n    address previous = address(s_flags);\n    if (previous != flagsAddress) {\n      s_flags = FlagsInterface(flagsAddress);\n      emit FlagsAddressUpdated(previous, flagsAddress);\n    }\n  }\n\n  /**\n   * @notice Set the threshold details for comparing a Chainlink aggregator\n   * to a Compound Open Oracle feed.\n   * @param aggregator The Chainlink aggregator address\n   * @param compoundSymbol The symbol used by Compound for this feed\n   * @param compoundDecimals The number of decimals in the Compound feed\n   * @param compoundDeviationThresholdNumerator The threshold numerator use to determine\n   * the percentage with which the difference in prices must reside within. Parts per billion.\n   *   For example:\n   *     If prices are valid within a 5% threshold, assuming x is the compoundDeviationThresholdNumerator:\n   *     x / 1,000,000,000 = 0.05\n   *     x = 50,000,000\n   */\n  function setFeedDetails(\n    address aggregator,\n    string calldata compoundSymbol,\n    uint8 compoundDecimals,\n    uint32 compoundDeviationThresholdNumerator\n  ) \n    public \n    onlyOwner() \n  {\n    require(compoundDeviationThresholdNumerator > 0\n      && compoundDeviationThresholdNumerator <= BILLION, \"Invalid threshold numerator\");\n    require(_compoundPriceOf(compoundSymbol) != 0, \"Invalid Compound price\");\n    string memory currentSymbol = s_feedDetails[aggregator].symbol;\n    // If symbol is not set, use the new one\n    if (bytes(currentSymbol).length == 0) {\n      s_feedDetails[aggregator] = CompoundFeedDetails({\n        symbol: compoundSymbol,\n        decimals: compoundDecimals,\n        deviationThresholdNumerator: compoundDeviationThresholdNumerator\n      });\n      emit FeedDetailsSet(\n        aggregator,\n        compoundSymbol,\n        compoundDecimals,\n        compoundDeviationThresholdNumerator\n      );\n    }\n    // If the symbol is already set, don't change it\n    else {\n      s_feedDetails[aggregator] = CompoundFeedDetails({\n        symbol: currentSymbol,\n        decimals: compoundDecimals,\n        deviationThresholdNumerator: compoundDeviationThresholdNumerator\n      });\n      emit FeedDetailsSet(\n        aggregator,\n        currentSymbol,\n        compoundDecimals,\n        compoundDeviationThresholdNumerator\n      );\n    }\n  }\n\n  /**\n   * @notice Check the price deviation of an array of aggregators\n   * @dev If any of the aggregators provided have an equivalent Compound Oracle feed\n   * that with a price outside of the configured deviation, this function will return them.\n   * @param aggregators address[] memory\n   * @return address[] invalid feeds\n   */\n  function check(\n    address[] memory aggregators\n  )\n    public\n    view\n    returns (\n      address[] memory\n    )\n  {\n    address[] memory invalidAggregators = new address[](aggregators.length);\n    uint256 invalidCount = 0;\n    for (uint256 i = 0; i < aggregators.length; i++) {\n      address aggregator = aggregators[i];\n      if (_isInvalid(aggregator)) {\n        invalidAggregators[invalidCount] = aggregator;\n        invalidCount++;\n      }\n    }\n\n    if (aggregators.length != invalidCount) {\n      assembly {\n        mstore(invalidAggregators, invalidCount)\n      }\n    }\n    return invalidAggregators;\n  }\n\n  /**\n   * @notice Check and raise flags for any aggregator that has an equivalent Compound\n   * Open Oracle feed with a price deviation exceeding the configured setting.\n   * @dev This contract must have write permissions on the Flags contract\n   * @param aggregators address[] memory\n   * @return address[] memory invalid aggregators\n   */\n  function update(\n    address[] memory aggregators\n  )\n    public\n    returns (\n      address[] memory\n    )\n  {\n    address[] memory invalidAggregators = check(aggregators);\n    s_flags.raiseFlags(invalidAggregators);\n    return invalidAggregators;\n  }\n\n  /**\n   * @notice Check the price deviation of an array of aggregators\n   * @dev If any of the aggregators provided have an equivalent Compound Oracle feed\n   * that with a price outside of the configured deviation, this function will return them.\n   * @param data bytes encoded address array\n   * @return needsUpkeep bool indicating whether upkeep needs to be performed\n   * @return invalid aggregators - bytes encoded address array of invalid aggregator addresses\n   */\n  function checkUpkeep(\n    bytes calldata data\n  )\n    external\n    view\n    override\n    returns (\n      bool,\n      bytes memory\n    )\n  {\n    address[] memory invalidAggregators = check(abi.decode(data, (address[])));\n    bool needsUpkeep = (invalidAggregators.length > 0);\n    return (needsUpkeep, abi.encode(invalidAggregators));\n  }\n\n  /**\n   * @notice Check and raise flags for any aggregator that has an equivalent Compound\n   * Open Oracle feed with a price deviation exceeding the configured setting.\n   * @dev This contract must have write permissions on the Flags contract\n   * @param data bytes encoded address array\n   */\n  function performUpkeep(\n    bytes calldata data\n  )\n    external\n    override\n  {\n    update(abi.decode(data, (address[])));\n  }\n\n  /**\n   * @notice Get the threshold of an aggregator\n   * @param aggregator address\n   * @return string Compound Oracle Symbol\n   * @return uint8 Compound Oracle Decimals\n   * @return uint32 Deviation Threshold Numerator\n   */\n  function getFeedDetails(\n    address aggregator\n  )\n    public\n    view\n    returns (\n      string memory,\n      uint8,\n      uint32\n    )\n  {\n    CompoundFeedDetails memory compDetails = s_feedDetails[aggregator];\n    return(\n      compDetails.symbol,\n      compDetails.decimals,\n      compDetails.deviationThresholdNumerator\n    );\n  }\n\n  /**\n   * @notice Get the flags address\n   * @return address\n   */\n  function flags()\n    external\n    view\n    returns (\n      address\n    )\n  {\n    return address(s_flags);\n  }\n\n  /**\n   * @notice Get the Compound Open Oracle address\n   * @return address\n   */\n  function compoundOpenOracle()\n    external\n    view\n    returns (\n      address\n    )\n  {\n    return address(s_compOpenOracle);\n  }\n\n  /**\n   * @notice Return the Compound oracle price of an asset using its symbol\n   * @param symbol string\n   * @return price uint256\n   */\n  function _compoundPriceOf(\n    string memory symbol\n  )\n    private\n    view\n    returns (\n      uint256\n    )\n  {\n    return s_compOpenOracle.price(symbol);\n  }\n\n  // VALIDATION FUNCTIONS\n\n  /**\n   * @notice Check if an aggregator has an equivalent Compound Oracle feed\n   * that's price is deviated more than the threshold.\n   * @param aggregator address of the Chainlink aggregator\n   * @return invalid bool. True if the deviation exceeds threshold.\n   */\n  function _isInvalid(\n    address aggregator\n  )\n    private\n    view\n    returns (\n      bool invalid\n    )\n  {\n    CompoundFeedDetails memory compDetails = s_feedDetails[aggregator];\n    if (compDetails.deviationThresholdNumerator == 0) {\n      return false;\n    }\n    // Get both oracle price details\n    uint256 compPrice = _compoundPriceOf(compDetails.symbol);\n    (uint256 aggregatorPrice, uint8 aggregatorDecimals) = _aggregatorValues(aggregator);\n\n    // Adjust the prices so the number of decimals in each align\n    (aggregatorPrice, compPrice) = _adjustPriceDecimals(\n      aggregatorPrice,\n      aggregatorDecimals,\n      compPrice,\n      compDetails.decimals\n    );\n\n    // Check whether the prices deviate beyond the threshold.\n    return _deviatesBeyondThreshold(aggregatorPrice, compPrice, compDetails.deviationThresholdNumerator);\n  }\n\n  /**\n   * @notice Retrieve the price and the decimals from an Aggregator\n   * @param aggregator address\n   * @return price uint256\n   * @return decimals uint8\n   */\n  function _aggregatorValues(\n    address aggregator\n  )\n    private\n    view\n    returns (\n      uint256 price,\n      uint8 decimals\n    )\n  {\n    AggregatorV3Interface priceFeed = AggregatorV3Interface(aggregator);\n    (,int256 signedPrice,,,) = priceFeed.latestRoundData();\n    price = uint256(signedPrice);\n    decimals = priceFeed.decimals();\n  }\n\n  /**\n   * @notice Adjust the price values of the Aggregator and Compound feeds so that\n   * their decimal places align. This enables deviation to be calculated.\n   * @param aggregatorPrice uint256\n   * @param aggregatorDecimals uint8 - decimal places included in the aggregator price\n   * @param compoundPrice uint256\n   * @param compoundDecimals uint8 - decimal places included in the compound price\n   * @return adjustedAggregatorPrice uint256\n   * @return adjustedCompoundPrice uint256\n   */\n  function _adjustPriceDecimals(\n    uint256 aggregatorPrice,\n    uint8 aggregatorDecimals,\n    uint256 compoundPrice,\n    uint8 compoundDecimals\n  )\n    private\n    pure\n    returns (\n      uint256 adjustedAggregatorPrice,\n      uint256 adjustedCompoundPrice\n    )\n  {\n    if (aggregatorDecimals > compoundDecimals) {\n      uint8 diff = aggregatorDecimals - compoundDecimals;\n      uint256 multiplier = 10**uint256(diff);\n      compoundPrice = compoundPrice * multiplier;\n    }\n    else if (aggregatorDecimals < compoundDecimals) {\n      uint8 diff = compoundDecimals - aggregatorDecimals;\n      uint256 multiplier = 10**uint256(diff);\n      aggregatorPrice = aggregatorPrice * multiplier;\n    }\n    adjustedAggregatorPrice = aggregatorPrice;\n    adjustedCompoundPrice = compoundPrice;\n  }\n\n  /**\n   * @notice Check whether the compound price deviates from the aggregator price\n   * beyond the given threshold\n   * @dev Prices must be adjusted to match decimals prior to calling this function\n   * @param aggregatorPrice uint256\n   * @param compPrice uint256\n   * @param deviationThresholdNumerator uint32\n   * @return beyondThreshold boolean. Returns true if deviation is beyond threshold.\n   */\n  function _deviatesBeyondThreshold(\n    uint256 aggregatorPrice,\n    uint256 compPrice,\n    uint32 deviationThresholdNumerator\n  )\n    private\n    pure\n    returns (\n      bool beyondThreshold\n    )\n  {\n    // Deviation amount threshold from the aggregator price\n    uint256 deviationAmountThreshold = aggregatorPrice.mul(deviationThresholdNumerator).div(BILLION);\n\n    // Calculate deviation\n    uint256 deviation;\n    if (aggregatorPrice > compPrice) {\n      deviation = aggregatorPrice.sub(compPrice);\n    }\n    else if (aggregatorPrice < compPrice) {\n      deviation = compPrice.sub(aggregatorPrice);\n    }\n    beyondThreshold = (deviation >= deviationAmountThreshold);\n  }\n}\n",
		"dev/ConfirmedOwner.sol": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\n/**\n * @title The ConfirmedOwner contract\n * @notice A contract with helpers for basic contract ownership.\n */\ncontract ConfirmedOwner {\n\n  address private s_owner;\n  address private s_pendingOwner;\n\n  event OwnershipTransferRequested(\n    address indexed from,\n    address indexed to\n  );\n  event OwnershipTransferred(\n    address indexed from,\n    address indexed to\n  );\n\n  constructor(address newOwner) {\n    s_owner = newOwner;\n  }\n\n  /**\n   * @notice Allows an owner to begin transferring ownership to a new address,\n   * pending.\n   */\n  function transferOwnership(\n    address to\n  )\n    external\n    onlyOwner()\n  {\n    require(to != msg.sender, \"Cannot transfer to self\");\n\n    s_pendingOwner = to;\n\n    emit OwnershipTransferRequested(s_owner, to);\n  }\n\n  /**\n   * @notice Allows an ownership transfer to be completed by the recipient.\n   */\n  function acceptOwnership()\n    external\n  {\n    require(msg.sender == s_pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = s_owner;\n    s_owner = msg.sender;\n    s_pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /**\n   * @notice Get the current owner\n   */\n  function owner()\n    public\n    view\n    returns (\n      address\n    )\n  {\n    return s_owner;\n  }\n\n  /**\n   * @notice Reverts if called by anyone other than the contract owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == s_owner, \"Only callable by owner\");\n    _;\n  }\n\n}\n",
		"vendor/SafeMathChainlink.sol": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMathChainlink {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(\n    uint256 a,\n    uint256 b\n  )\n    internal\n    pure\n    returns (\n      uint256\n    )\n  {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(\n    uint256 a,\n    uint256 b\n  )\n    internal\n    pure\n    returns (\n      uint256\n    )\n  {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(\n    uint256 a,\n    uint256 b\n  )\n    internal\n    pure\n    returns (\n      uint256\n    )\n  {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(\n    uint256 a,\n    uint256 b\n  )\n    internal\n    pure\n    returns (\n      uint256\n    )\n  {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(\n    uint256 a,\n    uint256 b\n  )\n    internal\n    pure\n    returns (\n      uint256\n    )\n  {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n",
		"interfaces/FlagsInterface.sol": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\ninterface FlagsInterface {\n  function getFlag(\n    address\n  )\n    external\n    view\n    returns (\n      bool\n    );\n\n  function getFlags(\n    address[] calldata\n  )\n    external\n    view\n    returns (\n      bool[] memory\n    );\n\n  function raiseFlag(\n    address\n  ) external;\n\n  function raiseFlags(\n    address[] calldata\n  ) external;\n\n  function lowerFlags(\n    address[] calldata\n  ) external;\n\n  function setRaisingAccessController(\n    address\n  ) external;\n}\n",
		"interfaces/AggregatorV3Interface.sol": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\ninterface AggregatorV3Interface {\n\n  function decimals()\n    external\n    view\n    returns (\n      uint8\n    );\n\n  function description()\n    external\n    view\n    returns (\n      string memory\n    );\n\n  function version()\n    external\n    view\n    returns (\n      uint256\n    );\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(\n    uint80 _roundId\n  )\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n}\n",
		"interfaces/UniswapAnchoredView.sol": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\n// Compound Finance's oracle interface\ninterface UniswapAnchoredView {\n  \n  function price(\n    string memory symbol\n  )\n    external \n    view \n    returns(\n      uint256\n    );\n}\n",
		"interfaces/UpkeepInterface.sol": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\ninterface UpkeepInterface {\n  function checkUpkeep(\n    bytes calldata data\n  )\n    external\n    returns (\n      bool,\n      bytes memory\n    );\n\n  function performUpkeep(\n    bytes calldata data\n  ) external;\n}\n"
	},
	"sourceTreeHashHex": "0x4f5357cbdc81fed8f3b2e77dc1f74796a5cab189f14c15a02cca0b322cc5a215",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.7.0+commit.9e61f92b.js",
		"settings": {
			"optimizer": {
				"runs": 1000000,
				"enabled": true
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"userdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap",
						"evm.methodIdentifiers",
						"metadata"
					]
				}
			},
			"metadata": {
				"bytecodeHash": "none"
			},
			"remappings": []
		}
	},
	"chains": {}
}