/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from ".";

interface OperatorForwarderInterface extends Interface {
  functions: {
    authorizedSender1: TypedFunctionDescription<{ encode([]: []): string }>;

    authorizedSender2: TypedFunctionDescription<{ encode([]: []): string }>;

    authorizedSender3: TypedFunctionDescription<{ encode([]: []): string }>;

    forward: TypedFunctionDescription<{
      encode([to, data]: [string, Arrayish]): string;
    }>;

    linkAddr: TypedFunctionDescription<{ encode([]: []): string }>;
  };

  events: {};
}

export class OperatorForwarder extends Contract {
  connect(signerOrProvider: Signer | Provider | string): OperatorForwarder;
  attach(addressOrName: string): OperatorForwarder;
  deployed(): Promise<OperatorForwarder>;

  on(event: EventFilter | string, listener: Listener): OperatorForwarder;
  once(event: EventFilter | string, listener: Listener): OperatorForwarder;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): OperatorForwarder;
  removeAllListeners(eventName: EventFilter | string): OperatorForwarder;
  removeListener(eventName: any, listener: Listener): OperatorForwarder;

  interface: OperatorForwarderInterface;

  functions: {
    authorizedSender1(overrides?: TransactionOverrides): Promise<string>;

    "authorizedSender1()"(overrides?: TransactionOverrides): Promise<string>;

    authorizedSender2(overrides?: TransactionOverrides): Promise<string>;

    "authorizedSender2()"(overrides?: TransactionOverrides): Promise<string>;

    authorizedSender3(overrides?: TransactionOverrides): Promise<string>;

    "authorizedSender3()"(overrides?: TransactionOverrides): Promise<string>;

    forward(
      to: string,
      data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "forward(address,bytes)"(
      to: string,
      data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    linkAddr(overrides?: TransactionOverrides): Promise<string>;

    "linkAddr()"(overrides?: TransactionOverrides): Promise<string>;
  };

  authorizedSender1(overrides?: TransactionOverrides): Promise<string>;

  "authorizedSender1()"(overrides?: TransactionOverrides): Promise<string>;

  authorizedSender2(overrides?: TransactionOverrides): Promise<string>;

  "authorizedSender2()"(overrides?: TransactionOverrides): Promise<string>;

  authorizedSender3(overrides?: TransactionOverrides): Promise<string>;

  "authorizedSender3()"(overrides?: TransactionOverrides): Promise<string>;

  forward(
    to: string,
    data: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "forward(address,bytes)"(
    to: string,
    data: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  linkAddr(overrides?: TransactionOverrides): Promise<string>;

  "linkAddr()"(overrides?: TransactionOverrides): Promise<string>;

  filters: {};

  estimate: {
    authorizedSender1(overrides?: TransactionOverrides): Promise<BigNumber>;

    "authorizedSender1()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    authorizedSender2(overrides?: TransactionOverrides): Promise<BigNumber>;

    "authorizedSender2()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    authorizedSender3(overrides?: TransactionOverrides): Promise<BigNumber>;

    "authorizedSender3()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    forward(
      to: string,
      data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "forward(address,bytes)"(
      to: string,
      data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    linkAddr(overrides?: TransactionOverrides): Promise<BigNumber>;

    "linkAddr()"(overrides?: TransactionOverrides): Promise<BigNumber>;
  };
}
