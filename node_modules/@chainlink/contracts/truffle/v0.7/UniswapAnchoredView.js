'use strict'
Object.defineProperty(exports, '__esModule', { value: true })
const contract = require('@truffle/contract')
const UniswapAnchoredView = contract({
 "contractName": "UniswapAnchoredView",
 "abi": [
  {
   "inputs": [
    {
     "internalType": "string",
     "name": "symbol",
     "type": "string"
    }
   ],
   "name": "price",
   "outputs": [
    {
     "internalType": "uint256",
     "name": "",
     "type": "uint256"
    }
   ],
   "stateMutability": "view",
   "type": "function"
  }
 ],
 "evm": {
  "bytecode": {
   "linkReferences": {},
   "object": "0x",
   "opcodes": "",
   "sourceMap": ""
  },
  "deployedBytecode": {
   "immutableReferences": {},
   "linkReferences": {},
   "object": "0x",
   "opcodes": "",
   "sourceMap": ""
  },
  "methodIdentifiers": {
   "price(string)": "fe2c6198"
  }
 },
 "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/thomas/workspace/chainlink/evm-contracts/src/v0.7/interfaces/UniswapAnchoredView.sol\":\"UniswapAnchoredView\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/home/thomas/workspace/chainlink/evm-contracts/src/v0.7/interfaces/UniswapAnchoredView.sol\":{\"keccak256\":\"0x3ac3df15fcd185532f0bf413a7b01a2f1e05f5b1961a655142ffd3f8cb83a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://807e7b8d1ec6c232f8a84c1508bc08f71003b411c96c3ea851d21356ed29d3df\",\"dweb:/ipfs/QmcES5aYp4KkuXZWYp4qp1JoGfQrwiJWD8mkfA875ECgS6\"]}},\"version\":1}"
})

if (process.env.NODE_ENV === 'test') {
  try {
    eval('UniswapAnchoredView.setProvider(web3.currentProvider)')
  } catch (e) {}
}

exports.UniswapAnchoredView = UniswapAnchoredView
